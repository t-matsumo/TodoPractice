@startuml

package TodoDomain.Models.Memo {
    class Memo
    interface MemoRepository

    MemoRepository --> Memo : fetch
}

package TodoApplication.Memo {
    class GetMemosUseCase
    class MemoData

    GetMemosUseCase --> MemoData : create list
    MemoData --> Memo : use for instantiation

    GetMemosUseCase o-- MemoRepository : use to get Memo
    GetMemosUseCase --> Memo : recieve from repository
}

package Presentation.Memo {
    package List {
        class MemoListController
        class MemoListViewModel
        class MemoCell
        class MemoCellData
        class TableView

        MemoListViewModel o-- MemoCellData
        MemoListViewModel --> MemoData : use for instantiation

        TableView --> MemoCell : show
        MemoCell --> MemoCellData : show

        MemoListController o-- MemoListViewModel : use to apply data to views
        MemoListController o-- TableView
        MemoListController --> MemoCell : set Data

        MemoListController o-- GetMemosUseCase
        MemoListController --> MemoData : recieve from use case
    }
}
package Infrastructure.Memo {
    class InMemoryMemoRepository implements MemoRepository
    class MemoFactory
    class InMemoryMemoEntity

    InMemoryMemoRepository --> InMemoryMemoEntity : fetch
    InMemoryMemoRepository --> MemoFactory : use
    MemoFactory --> InMemoryMemoEntity : use
    MemoFactory --> Memo : create
}

@enduml
