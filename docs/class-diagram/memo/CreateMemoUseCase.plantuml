@startuml

package TodoDomain.Models.Memo {
    class Memo
    interface MemoRepository

    MemoRepository --> Memo : use for create
}

package TodoApplication.Memo {
    class CreateMemoUseCase
    class MemoData
    class MemoFactory

    CreateMemoUseCase --> MemoData : use to create Memo
    MemoFactory --> MemoData : use
    MemoFactory --> Memo : create
    CreateMemoUseCase o-- MemoRepository : use
}

package Presentation.Memo {
    package Create {
        class MemoCreateController

        MemoCreateController o-- CreateMemoUseCase
        MemoCreateController --> MemoData : pass to usecase
    }
}

package Infrastructure.Memo {
    class InMemoryMemoRepository implements MemoRepository
    class InMemoryMemoEntity

    InMemoryMemoRepository --> InMemoryMemoEntity : use to create
    InMemoryMemoRepository --> Memo : receive from use case
    InMemoryMemoEntity --> Memo : use for instantiate
}

@enduml
